name: CMake Build Matrix

on: [push, pull_request]

env:
  CMAKE_VERSION: 3.16.9

jobs:
  build-ubuntu-20:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: download CMake
        shell: cmake -P {0}
        run: |
          set(cmake_version $ENV{CMAKE_VERSION})

          message(STATUS "Using host CMake version: ${CMAKE_VERSION}")
          set(cmake_suffix "Linux-x86_64.tar.gz")
          set(cmake_dir "cmake-${cmake_version}-Linux-x86_64/bin")
          set(cmake_url "https://github.com/Kitware/CMake/releases/download/v${cmake_version}/cmake-${cmake_version}-${cmake_suffix}")
          file(DOWNLOAD "${cmake_url}" ./cmake.zip SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./cmake.zip)
          file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}/${cmake_dir}" cmake_dir)
          set(path_separator ":")
          file(APPEND "$ENV{GITHUB_PATH}" "$ENV{GITHUB_WORKSPACE}${path_separator}${cmake_dir}")
          execute_process(
            COMMAND chmod +x ${cmake_dir}/cmake
          )
      - name: configure
        run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER="g++-9" -DCMAKE_C_COMPILER="gcc-9" -DCOVERAGE=ON ..
      - name: build
        run: cmake --build build
      - name: test
        run: |
          cd build
          ctest
          files=`find . -name "*.gcda" | xargs`
          gcov -f -b $files

      - name: lcov-action
        uses: danielealbano/lcov-action@v1
        with:
          remove_patterns: /usr/include,test,thirdparty
          output_lcov_info: ./coverage.info

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.info

  build-ubuntu-18:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: install
        run: sudo apt-get -y install gcc-8 g++-8   
      - name: configure
        run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER="g++-8" -DCMAKE_C_COMPILER="gcc-8" ..
      - name: build
        run: cmake --build build
      - name: test
        run: cd build & test

  build-macos:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: configure
        run: mkdir build && cd build && cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug ..
      - name: build
        run: cmake --build build
      - name: test
        run: cd build && ctest

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: configure
        run: mkdir build && cd build && cmake ..
      - name: build
        run: cmake --build build --config Debug
      - name: test
        run: cd build && ctest -C Debug
